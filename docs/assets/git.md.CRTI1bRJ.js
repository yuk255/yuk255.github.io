import{_ as e,c as o,o as i,a1 as t}from"./chunks/framework.DDQHAUqM.js";const x=JSON.parse('{"title":"github工作流","description":"","frontmatter":{},"headers":[],"relativePath":"git.md","filePath":"git.md"}'),l={name:"git.md"},p=t(`<h1 id="github工作流" tabindex="-1">github工作流 <a class="header-anchor" href="#github工作流" aria-label="Permalink to &quot;github工作流&quot;">​</a></h1><blockquote><p>关联远程仓库</p></blockquote><p><code>git remote add origin 远程仓库链接地址</code></p><ol><li><p><code>git clone</code> // 到本地</p></li><li><p><code>git checkout -b xxx </code>切换至新分支xxx （相当于复制了remote的仓库到本地的xxx分支上</p></li><li><p>修改或者添加本地代码（部署在硬盘的源文件上）</p></li><li><p><code>git diff</code>查看自己对代码做出的改变</p></li><li><p><code>git add</code> 上传更新后的代码至暂存区</p></li><li><p><code>git commit -m</code> 可以将暂存区里更新后的代码更新到本地git</p></li><li><p><code>git push origin xxx</code> 将本地的xxxgit分支上传至github上的git</p></li></ol><blockquote><p>（如果在写自己的代码过程中发现远端GitHub上代码出现改变）</p></blockquote><ol><li><p><code>git checkout main</code> 切换回main分支</p></li><li><p><code>git pull origin master(main) </code>将远端修改过的代码再更新到本地</p></li><li><p><code>git checkout xxx</code> 回到xxx分支</p></li><li><p><code>git rebase main</code> 我在xxx分支上，先把main移过来，然后根据我的commit来修改成新的内容</p><p>（中途可能会出现，<code>rebase conflict</code> --&gt;手动选择保留哪段代码）</p></li><li><p><code>git push -f origin xxx</code> 把rebase后并且更新过的代码再push到远端github上 （-f --&gt;强行）</p></li></ol><ul><li>原项目主人采用<code>pull request</code> 中的<code> squash and merge</code> 合并所有不同的commit</li></ul><blockquote><p>远端完成更新后</p></blockquote><ol><li><code>git branch -d xxx</code> 删除本地的git分支</li><li><code>git pull origin master </code>再把远端的最新代码拉至本地</li></ol><p><a href="https://www.bilibili.com/video/BV19e4y1q7JJ/" target="_blank" rel="noreferrer">bilibili</a></p><blockquote><p>github 克隆/push报ssl错误</p></blockquote><ol><li><p><code>git config --global http.sslVerify &quot;false&quot;</code></p><p>or修改配置文件，添加下面</p></li><li><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[http]</span></span>
<span class="line"><span> </span></span>
<span class="line"><span> sslverify = false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[https]</span></span>
<span class="line"><span></span></span>
<span class="line"><span> sslverify = false</span></span></code></pre></div></li></ol><h2 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h2><blockquote><p>删除文件</p></blockquote><p><code>git rm xxx</code></p><blockquote><p>删除文件夹</p></blockquote><p><code>git rm -r xxx</code></p><blockquote><p>删除完添加注释提交</p></blockquote><p><code>git commit -m &quot;xxx&quot; </code></p><blockquote><p>push到仓库</p><p>-f强行push</p></blockquote><p><code>git push -f origin xxx</code></p>`,21),a=[p];function c(s,n,d,r,u,g){return i(),o("div",null,a)}const b=e(l,[["render",c]]);export{x as __pageData,b as default};
